<?xml version="1.0" encoding="UTF8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTDMapper3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- クラス指定 -->
<mapper>
<!-- <mapper namespace="com.example.demo.login.domain.repository.mybatis.UserMapper2"> -->

<!-- ポイント5:マッピング定義 selectの結果とJavaクラスを紐つける-->
<resultMap type="com.example.demo.login.domain.model.User" id="user">
<!-- <resultcolumn="<カラム名>"property="<Javaクラスのフィールド名>"/> -->

<id column="user_id" property="userId"/>

<result column="password" property="password"/>

<result column="user_name" property="userName"/>

<result column="birthday" property="birthday"/>

<result column="age" property="age"/>

<result column="marriage" property="marriage"/>

<result column="role" property="role"/>

</resultMap>
<!-- ポイント2:メソッドとの紐つけ -->
<!-- ポイント3:parameterType -->
<!-- 1件insert -->
<insert id="insert"
parameterType="com.example.demo.login.model.User">
	INSERT INTO m_user(
		user_id,
		passeord,
		user_name,
		birthday,
		age,
		marriage,
		role)
		VALUES(
		#{userId},
		#{password},
		#{userName},
		#{birthday},
		#{age},
		#{marriage},
		#{role})
		)
</insert>

<!-- ポイント4:resultType SQLの結果を受け取る-->
<!-- 1件検索 -->
<select id="selectOne"
parameterType="string"
resultType="com.example.demo.login.domain.model.User">

SELECT 	user_id,
		password,
		user_name,
		birthday,
		age,
		marriage,
		role
FROM
		m_user
WHERE
		user_id = #{userId}
</select>

<!-- ポイント5:マッピング定義 -->
<!-- 全件定義 -->

<select id="selectMany" resultMap="user">
SELECT 	user_id,
		password,
		user_name,
		birthday,
		age,
		marriage,
		role
FROM
		m_user
</select>

<!-- 1件更新 -->
<update id="updateOne" parameterType="com.example.demo.login.domain.model.User">
UPDATE m_user
SET
		password = #{passeord},
		user_name = #{userName},
		age = #{age},
		marriage = #{marriage},
WHERE
		user_id = #{userId}
</update>
</mapper>


